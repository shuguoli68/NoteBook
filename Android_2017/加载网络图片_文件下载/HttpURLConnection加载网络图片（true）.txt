  public void onClick(View view) {      
switch (view.getId()){

case R.id.btn3:
                new Thread(new Runnable() {
                    @Override
                    public void run() {
                        Message msg = mHandler.obtainMessage();
                        msg.obj = NetWorkUtils.downLoadImageFromNet("http://img.my.csdn.net/uploads/201407/26/1406383290_9329.jpg".trim());
                        msg.what =0;
                        mHandler.sendMessage(msg);
                    }
                }).start();
                break;
}}




private Handler mHandler = new Handler() {
        @Override
        public void handleMessage(Message msg) {
            Bitmap bitmap = (Bitmap) msg.obj;
            if(bitmap == null){
                img.setBackgroundResource(R.mipmap.image);
            }else{
                img.setImageBitmap(bitmap);
            }
        }
    };




public class NetWorkUtils {
    public static Bitmap downLoadImageFromNet(String urlString){
        Bitmap bitmap = null;
        InputStream inputStream;
        try {
            //建立一个URL对象
            URL url = new URL(urlString);
            //获取HttpURLConnection对象
            HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection();
            httpURLConnection.setConnectTimeout(2000);
            //设置请求方式
            httpURLConnection.setRequestMethod("GET");
            //设置读取数据的事件
            httpURLConnection.setReadTimeout(2000);
            //设置是否使用缓存
            httpURLConnection.setUseCaches(false);
            //设置可以从服务器读取数据，默认为true
            httpURLConnection.setDoInput(true);
            //获取链接url获取的返回码
            int requestCode = httpURLConnection.getResponseCode();
            if(requestCode == 200){//表示我们请求成功
                inputStream = httpURLConnection.getInputStream();
                bitmap = BitmapFactory.decodeStream(inputStream);
            }
        } catch (MalformedURLException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
        return bitmap;
    }
}