



<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
              android:layout_width="match_parent"
              android:layout_height="match_parent"
              android:background="@mipmap/bg_color"
    >
<!--    <ImageView
        android:background="@mipmap/logo"
        android:layout_marginTop="120dp"
        android:layout_centerHorizontal="true"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"/>
    <ImageView
        android:background="@mipmap/bg_map"
        android:layout_alignParentBottom="true"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"/> -->
    <ListView
        android:id="@+id/listView1"
        android:layout_width="fill_parent"
        android:layout_height="fill_parent"
        android:layout_alignParentLeft="true"
        >
    </ListView>
</RelativeLayout>








<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
                android:layout_width="fill_parent"
                android:layout_height="wrap_content"
                android:paddingLeft="5dip"
                android:paddingRight="5dip"
    >
    <ImageView
        android:id="@+id/icon"
        android:layout_width="60dp"
        android:layout_height="60dp"
        android:src="@mipmap/ic_launcher"
        android:layout_alignParentLeft="true"
        android:padding="3dip"
        />

    <TextView
        android:id="@+id/videoName"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_centerVertical="true"
        android:layout_toRightOf="@+id/icon"
        android:gravity="left"
        android:paddingLeft="5dip"
        android:text="appName"
        android:textColor="#0000FF"
        android:textSize="20sp" />

</RelativeLayout>









package com.example.welcome;

import android.Manifest;
import android.app.Activity;
import android.content.Context;
import android.content.pm.PackageManager;
import android.database.Cursor;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.os.Bundle;
import android.provider.MediaStore;
import android.support.annotation.NonNull;
import android.support.v4.app.ActivityCompat;
import android.support.v4.content.ContextCompat;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.BaseAdapter;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;

import com.example.loginmould.R;

import java.util.ArrayList;

/**
 * Created by Admin on 2017/8/30.
 */
public class WelcomeActivity extends Activity{
    /*private final long WELCOME_LENGTH = 2000;
    Handler handler = new Handler();
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_welcome);
        handler.postDelayed(new Runnable() {
            @Override
            public void run() {
                startActivity(new Intent(WelcomeActivity.this, LoginActivity.class));
                finish();
            }
        },WELCOME_LENGTH);
    }*/
    private Cursor cursor;

    private ArrayList<VideoInfo> videoList = new ArrayList<VideoInfo>();

    private ListView videoListView;

    public void onCreate(Bundle savedInstanceState){
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_welcome);

        videoListView=(ListView)findViewById(R.id.listView1);
        permissionTest();

        videoListView.setOnItemClickListener(new AdapterView.OnItemClickListener() {

            @Override
            public void onItemClick(AdapterView<?> arg0, View arg1, int arg2,
                                    long arg3) {
                /*Intent playIntent=new Intent(WelcomeActivity.this, VideoPlayer.class);
                String pathString=videoList.get(arg2).filePath;
                playIntent.putExtra("path", pathString);
                VideoDemo.this.startActivity(playIntent);*/
                Toast.makeText(WelcomeActivity.this,"click_"+arg2,Toast.LENGTH_SHORT).show();
            }
        });
    }

    private void permissionTest() {
        if (ContextCompat.checkSelfPermission(this, Manifest.permission.READ_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
            ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.READ_EXTERNAL_STORAGE}, 2);
        } else {
            init();
        }
    }

    @Override
    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {
        if (requestCode == 2) {
            if (grantResults[0] == PackageManager.PERMISSION_GRANTED) {
                init();
            } else {
                Toast.makeText(this, "1获取权限被拒绝后的操作", Toast.LENGTH_SHORT).show();
                Log.i("TAG","1获取权限被拒绝后的操作");
            }
        }
        super.onRequestPermissionsResult(requestCode, permissions, grantResults);
    }

    private void init(){
        String[] thumbColumns = new String[]{
                MediaStore.Video.Thumbnails.DATA,
                MediaStore.Video.Thumbnails.VIDEO_ID
        };

        String[] mediaColumns = new String[]{
                MediaStore.Video.Media.DATA,
                MediaStore.Video.Media._ID,
                MediaStore.Video.Media.TITLE,
                MediaStore.Video.Media.MIME_TYPE
        };

        //首先检索SDcard上所有的video
        cursor = getContentResolver().query(MediaStore.Video.Media.EXTERNAL_CONTENT_URI, mediaColumns, null, null, null);



        if(cursor.moveToFirst()){
            do{
                VideoInfo info = new VideoInfo();

                info.filePath = cursor.getString(cursor.getColumnIndexOrThrow(MediaStore.Video.Media.DATA));
                info.mimeType = cursor.getString(cursor.getColumnIndexOrThrow(MediaStore.Video.Media.MIME_TYPE));
                info.title = cursor.getString(cursor.getColumnIndexOrThrow(MediaStore.Video.Media.TITLE));

                Log.d("-name debug-", info.title+"    "+info.filePath);

                //获取当前Video对应的Id，然后根据该ID获取其Thumb
                int id = cursor.getInt(cursor.getColumnIndexOrThrow(MediaStore.Video.Media._ID));
                BitmapFactory.Options options = new BitmapFactory.Options();
                options.inDither = false;
                options.inPreferredConfig = Bitmap.Config.ARGB_8888;
                info.b = MediaStore.Video.Thumbnails.getThumbnail(getContentResolver(), id,  MediaStore.Images.Thumbnails.MICRO_KIND, options);

                //然后将其加入到videoList
                videoList.add(info);

            }while(cursor.moveToNext());
        }

        //然后需要设置ListView的Adapter了，使用我们自定义的Adatper
        VideoAdapter adapter = new VideoAdapter(this);
        videoListView.setAdapter(adapter);
    }

    class VideoInfo{
        String filePath;
        String mimeType;
        Bitmap b;
        String title;
    }



    class ViewHolder{
        ImageView thumbImage;
        TextView titleText;
    }

    private class VideoAdapter extends BaseAdapter {

        private Context mContext;
        private LayoutInflater inflater;

        public VideoAdapter(Context context){
            this.mContext = context;
            this.inflater = LayoutInflater.from(context);
            this.inflater = (LayoutInflater) mContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
        }
        @Override
        public int getCount() {
            // TODO Auto-generated method stub
            return videoList.size();
        }
        @Override
        public Object getItem(int p) {
            // TODO Auto-generated method stub
            return videoList.get(p);
        }
        @Override
        public long getItemId(int p) {
            // TODO Auto-generated method stub
            return p;
        }
        @Override
        public View getView(int position, View convertView, ViewGroup parent) {
            ViewHolder holder ;
            if(convertView == null){
                holder = new ViewHolder();
                convertView = inflater.inflate(R.layout.list1_item, null);
                holder.thumbImage = (ImageView)convertView.findViewById(R.id.icon);
                holder.titleText = (TextView)convertView.findViewById(R.id.videoName);
                convertView.setTag(holder);
            }else{
                holder = (ViewHolder)convertView.getTag();
            }

            //显示信息
            holder.titleText.setText(videoList.get(position).title+"."+(videoList.get(position).mimeType).substring(6));
            if(videoList.get(position).b != null){
                holder.thumbImage.setImageBitmap(videoList.get(position).b);
            }

            return convertView;
        }

    }
}
